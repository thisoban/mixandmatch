// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mixandmatchv3;

#nullable disable

namespace mixandmatchv3.Migrations
{
    [DbContext(typeof(MMContext))]
    [Migration("20231103213424_allmodels")]
    partial class allmodels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DTO.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("adres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("website")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zipcode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("DTO.Job", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("companyidID")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("end")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.HasIndex("companyidID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("DTO.hiring_manager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("companyidID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phonenumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("companyidID");

                    b.ToTable("hiring_Managers");
                });

            modelBuilder.Entity("DTO.jobrequirements", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("jobIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("jobIdid");

                    b.ToTable("jobrequirements");
                });

            modelBuilder.Entity("DTO.Job", b =>
                {
                    b.HasOne("DTO.Company", "companyid")
                        .WithMany()
                        .HasForeignKey("companyidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("companyid");
                });

            modelBuilder.Entity("DTO.hiring_manager", b =>
                {
                    b.HasOne("DTO.Company", "companyid")
                        .WithMany()
                        .HasForeignKey("companyidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("companyid");
                });

            modelBuilder.Entity("DTO.jobrequirements", b =>
                {
                    b.HasOne("DTO.Job", "jobId")
                        .WithMany()
                        .HasForeignKey("jobIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jobId");
                });
#pragma warning restore 612, 618
        }
    }
}
